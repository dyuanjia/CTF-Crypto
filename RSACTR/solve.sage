from sage.cpython.string import bytes_to_str
from Crypto.Util.number import long_to_bytes
n = 86189015712742206661318956384113217139750003078610342617685680008031648665593084475380049812333368679135691853781358931175596625947183502471271847896831304286613852911806449923644242561516601607145223792817663313673887783188998675473695897620207595816740041838621395081652707987710238639184540156555727447551
e = 3

m = "23aa307a8c85e40ada1dccf08793e64b2feb393af7b4d95189ae887773d97a16a515e0125e249158bdffcd84276338c6d7e434bc25d93cfacc39c1e30ff09d507db3db7f1ce697ea90466023a5a6f752b6b7a97f296aeab818de23b854efc2b5b0c74e9f1f16f4e24c3924ca54285951220df3ca71e565e784ef2c6a23b140cc77a89950dbb30333c2e87bc920574f159750e88a43ac56930105313eeffb367468c63a589e13bc508f37362bc94a558d87ad8d4e6ad10ada24b31d885d7c33634d73789cc492a1946d8dc9421ef86cd8b67f5cc10d566a3c12638d717bfbff2f5cf7c71dd83c9fa2a8175ad2d0212c7f38f6997c25fc3ef3664ff9f0a81187bb23a79329b23336c1e2950f8941d689c5e2ff98d75f4d8fce47820c5d4e8ac930d76d61a09f3a4b0c4bd134442e1e78dbfda0e85734baaa2a4b483af26b0dc89c018e217f33a72579bf8ed2cd69ce3dc5a82e9f7920bc8e108afb83b6a7e3b6ed93063858e2d7e824b705b2d368b630703d7513f4d75fc98bf419138def43dcf1"

m = [m[i:i+256] for i in range(0, len(m), 256)]

for i in range(len(m)):
    m[i] = int(m[i],16)

c = 0x582da869d95d66b653b38f2e7fb7c845eacc8d1ca8f34cb1086af424b0f6f168d9cc62aeb468f5960978895229a90105fb9987feae9f509b21dc83e66bd51fc86a5f88f37ef91b2139941ec306d1a586679f60447175be4cbe372aef91d2bf742428e2ba71f61a79208e665e71210e6b1d756a78ce271f3f1671f6395ff32f3c

c = pow(int(c),3,n)

c-=6060
flag = ""
for i in range(3):
    M = m[i]
    C = c
    nbits = 1024
    kbits = 128
    mbar = M & (2^nbits-2^kbits)

    PR.<x> = PolynomialRing(Zmod(n))
    f = (mbar + x)^e - C

    x0 = f.small_roots(X=2^kbits, beta=1)[0]
    fl = long_to_bytes(int(M)-int(mbar+x0))
    flag += bytes_to_str(fl)
    c+=2020

print(flag)